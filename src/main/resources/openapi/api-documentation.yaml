openapi: 3.0.3
x-stoplight:
  id: xs14p86sgajdr
info:
  title: Airport travellers insights service
  description: Service providing insights on flights and airports
  version: '1.0'
servers:
  - url: ''
tags:
  - name: Travel
    description: Operations to manage travels
  - name: Airport
    description: Operation to retrieve information on airports
paths:
  /trips:
    post:
      summary: Register a trip
      description: |
        Register a new round trip travel from an origin to a destination with the departure and
        return dates.

        Origin and destination are represented by their IATA codes and dates must be in the future.
      operationId: registerTrip
      tags:
        - Travel
      requestBody:
        description: Trip information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTripRequest'
            examples: { }
      responses:
        '201':
          description: Trip registration registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTripResponse'
              examples: { }
    get:
      summary: ''
      operationId: get-trips
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegisterTripResponse'
              examples: { }
      description: Returns all trips that have been recorded
    delete:
      summary: ''
      operationId: delete-trips
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTripRequest'
      description: Passing the trip you want to delete will delete it
  /airport-insights:
    post:
      summary: Get airport insights
      description: 'return the number of traveller that transit through the airport in that date, the number of travellers that are travelling for leisure and for business and the probabilities'
      operationId: getAirportInsights
      tags:
        - Airport
      responses:
        '200':
          description: Airport insights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAirportInsightsResponse'
              examples: { }
      parameters:
        - schema:
            type: string
          in: query
          name: airportCode
          required: true
          description: Airport identification code
        - schema:
            type: string
          in: query
          name: date
          description: search date of the people who are at that airport
          required: true
  /airport-trend:
    get:
      summary: Your GET endpoint
      tags: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAirportTrend'
      operationId: get-airport-trend
      description: 'Return the number of travellers that transit through the airport, the number of travellers that are travelling for leisure and for business and their trends with reference to the previous day for each day within the specified range.'
      parameters:
        - schema:
            type: string
          in: query
          required: true
          name: airportCode
          description: Airport identification code
        - schema:
            type: string
            format: date
          in: query
          required: true
          name: startDate
          description: included start date that identifies when the search begins
        - schema:
            type: string
            format: date
          in: query
          required: true
          name: endDate
          description: end date included to create the trend
components:
  schemas:
    RegisterTripRequest:
      type: object
      properties:
        originAirportCode:
          $ref: '#/components/schemas/AirportIataCode'
        destinationAirportCode:
          $ref: '#/components/schemas/AirportIataCode'
        departureDate:
          description: Departure date from original airport
          type: string
          format: date
        returnDate:
          description: Return date from the destination airport
          type: string
          format: date
      required:
        - originAirportCode
        - destinationAirportCode
        - departureDate
        - returnDate
    RegisterTripResponse:
      type: object
      properties:
        originAirportCode:
          $ref: '#/components/schemas/AirportIataCode'
        destinationAirportCode:
          $ref: '#/components/schemas/AirportIataCode'
        departureDate:
          description: Departure date from original airport
          type: string
          format: date
        returnDate:
          description: Return date from the destination airport
          type: string
          format: date
      required:
        - originAirportCode
        - destinationAirportCode
        - departureDate
        - returnDate
    GetAirportInsightsResponse:
      type: object
      properties:
        airportCode:
          $ref: '#/components/schemas/AirportIataCode'
        date:
          description: Date the insights refer to
          type: string
          format: date
        totalTravellers:
          description: Number of travellers in the airport
          type: integer
          format: int32
          example: 4
        leisurePurposeTravellers:
          description: Number of travellers in the airport that are travelling for leisure
          type: integer
          format: int32
          example: 3
        leisurePurposeProbability:
          description: |
            Probability that the travellers are travelling for leisure.
            It can be omitted if `leisurePurposeTravellers` is zero.
          type: string
          example: '0.5612'
        businessPurposeTravellers:
          description: Number of travellers in the airport that are travelling for business
          type: integer
          format: int32
          example: 1
        businessPurposeProbability:
          description: |
            Probability that the travellers are travelling for business.
            It can be omitted if `businessPurposeTravellers` is zero.
          type: string
          example: '0.4502'
      required:
        - airportCode
        - date
        - leisurePurposeTravellers
        - businessPurposeTravellers
    AirportIataCode:
      description: IATA code
      type: string
      example: LIN
    GetAirportTrend:
      title: GetAirportTrend
      x-stoplight:
        id: fnmlylcrdtwut
      type: object
      properties:
        date:
          type: string
          format: date
          example: '2020-12-10'
        travelers:
          type: number
          format: int
          minimum: 0
        trend:
          type: number
          format: int
          minimum: 0
        businessTravellers:
          type: number
          format: int
          minimum: 0
        businessTravellersTrend:
          type: number
          format: int
          minimum: 0
        leisureTravellers:
          type: number
          format: int
          minimum: 0
        leisureTravellersTrend:
          type: number
          format: int
          minimum: 0
      x-examples: { }
